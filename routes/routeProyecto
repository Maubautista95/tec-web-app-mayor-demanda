const express = require('express');
const router = express.Router();
const Proyecto = require('../models/proyecto');

// Crear nuevo proyecto
router.post('/post', async (req, res) => {
  const data = new Proyecto({
    numero: req.body.numero,
    titulo: req.body.titulo,
    fechaIniciacion: req.body.fechaIniciacion,
    fechaEntrega: req.body.fechaEntrega,
    valor: req.body.valor,
    cliente: req.body.cliente,
    tipoDeProyecto: req.body.tipoDeProyecto,
    universidad: req.body.universidad,
    etapa: req.body.etapa
  });

  try {
    const dataToSave = await data.save();
    res.status(200).json(dataToSave);
  } catch (error) {
    res.status(400).json({ message: error.message });
  }
});

// Obtener todos los proyectos
router.get('/getAll', async (req, res) => {
  try {
    const data = await Proyecto.find()
      .populate('cliente')
      .populate('tipoDeProyecto')
      .populate('universidad')
      .populate('etapa');
    res.json(data);
  } catch (error) {
    res.status(500).json({ message: error.message });
  }
});

// Obtener un proyecto por ID
router.get('/getOne/:id', async (req, res) => {
  try {
    const data = await Proyecto.findById(req.params.id)
      .populate('cliente')
      .populate('tipoDeProyecto')
      .populate('universidad')
      .populate('etapa');
    res.json(data);
  } catch (error) {
    res.status(500).json({ message: error.message });
  }
});

// Actualizar un proyecto por ID
router.patch('/update/:id', async (req, res) => {
  try {
    const id = req.params.id;
    const updatedData = req.body;
    const options = { new: true };

    const result = await Proyecto.findByIdAndUpdate(id, updatedData, options)
      .populate('cliente')
      .populate('tipoDeProyecto')
      .populate('universidad')
      .populate('etapa');
    res.send(result);
  } catch (error) {
    res.status(400).json({ message: error.message });
  }
});

// Eliminar un proyecto por ID
router.delete('/delete/:id', async (req, res) => {
  try {
    const id = req.params.id;
    const data = await Proyecto.findByIdAndDelete(id);
    res.send(`Proyecto con numero ${data.numero} ha sido eliminado.`);
  } catch (error) {
    res.status(400).json({ message: error.message });
  }
});

module.exports = router;
